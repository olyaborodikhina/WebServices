
package ws.hello;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.FaultAction;
import javax.xml.ws.Response;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HelloService", targetNamespace = "http://hello.ws/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HelloService {


    /**
     * 
     * @param name
     * @return
     *     returns javax.xml.ws.Response<java.lang.String>
     */
    @WebMethod(operationName = "sayHello", action = "sayHello")
    public Response<String> sayHelloAsync(
        @WebParam(name = "name", partName = "name")
        String name);

    /**
     * 
     * @param name
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "sayHello", action = "sayHello")
    public Future<?> sayHelloAsync(
        @WebParam(name = "name", partName = "name")
        String name,
        @WebParam(name = "asyncHandler", partName = "asyncHandler")
        AsyncHandler<String> asyncHandler);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     * @throws HelloException_Exception
     */
    @WebMethod(action = "sayHello")
    @WebResult(partName = "return")
    @Action(input = "sayHello", output = "http://hello.ws/HelloService/sayHelloResponse", fault = {
        @FaultAction(className = HelloException_Exception.class, value = "http://hello.ws/HelloService/sayHello/Fault/HelloException")
    })
    public String sayHello(
        @WebParam(name = "name", partName = "name")
        String name)
        throws HelloException_Exception
    ;

}
